// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: livekit_agent_dispatch.proto

#include "livekit_agent_dispatch.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace livekit {
PROTOBUF_CONSTEXPR CreateAgentDispatchRequest::CreateAgentDispatchRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.room_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metadata_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateAgentDispatchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateAgentDispatchRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateAgentDispatchRequestDefaultTypeInternal() {}
  union {
    CreateAgentDispatchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateAgentDispatchRequestDefaultTypeInternal _CreateAgentDispatchRequest_default_instance_;
PROTOBUF_CONSTEXPR RoomAgentDispatch::RoomAgentDispatch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metadata_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RoomAgentDispatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomAgentDispatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomAgentDispatchDefaultTypeInternal() {}
  union {
    RoomAgentDispatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomAgentDispatchDefaultTypeInternal _RoomAgentDispatch_default_instance_;
PROTOBUF_CONSTEXPR DeleteAgentDispatchRequest::DeleteAgentDispatchRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dispatch_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.room_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteAgentDispatchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteAgentDispatchRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteAgentDispatchRequestDefaultTypeInternal() {}
  union {
    DeleteAgentDispatchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteAgentDispatchRequestDefaultTypeInternal _DeleteAgentDispatchRequest_default_instance_;
PROTOBUF_CONSTEXPR ListAgentDispatchRequest::ListAgentDispatchRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dispatch_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.room_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListAgentDispatchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListAgentDispatchRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListAgentDispatchRequestDefaultTypeInternal() {}
  union {
    ListAgentDispatchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListAgentDispatchRequestDefaultTypeInternal _ListAgentDispatchRequest_default_instance_;
PROTOBUF_CONSTEXPR ListAgentDispatchResponse::ListAgentDispatchResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_dispatches_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListAgentDispatchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListAgentDispatchResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListAgentDispatchResponseDefaultTypeInternal() {}
  union {
    ListAgentDispatchResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListAgentDispatchResponseDefaultTypeInternal _ListAgentDispatchResponse_default_instance_;
PROTOBUF_CONSTEXPR AgentDispatch::AgentDispatch(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.agent_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.room_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metadata_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.state_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AgentDispatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentDispatchDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentDispatchDefaultTypeInternal() {}
  union {
    AgentDispatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentDispatchDefaultTypeInternal _AgentDispatch_default_instance_;
PROTOBUF_CONSTEXPR AgentDispatchState::AgentDispatchState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.jobs_)*/{}
  , /*decltype(_impl_.created_at_)*/int64_t{0}
  , /*decltype(_impl_.deleted_at_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AgentDispatchStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AgentDispatchStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AgentDispatchStateDefaultTypeInternal() {}
  union {
    AgentDispatchState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AgentDispatchStateDefaultTypeInternal _AgentDispatchState_default_instance_;
}  // namespace livekit
static ::_pb::Metadata file_level_metadata_livekit_5fagent_5fdispatch_2eproto[7];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_livekit_5fagent_5fdispatch_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_livekit_5fagent_5fdispatch_2eproto = nullptr;

const uint32_t TableStruct_livekit_5fagent_5fdispatch_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::livekit::CreateAgentDispatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::livekit::CreateAgentDispatchRequest, _impl_.agent_name_),
  PROTOBUF_FIELD_OFFSET(::livekit::CreateAgentDispatchRequest, _impl_.room_),
  PROTOBUF_FIELD_OFFSET(::livekit::CreateAgentDispatchRequest, _impl_.metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::livekit::RoomAgentDispatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::livekit::RoomAgentDispatch, _impl_.agent_name_),
  PROTOBUF_FIELD_OFFSET(::livekit::RoomAgentDispatch, _impl_.metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::livekit::DeleteAgentDispatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::livekit::DeleteAgentDispatchRequest, _impl_.dispatch_id_),
  PROTOBUF_FIELD_OFFSET(::livekit::DeleteAgentDispatchRequest, _impl_.room_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::livekit::ListAgentDispatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::livekit::ListAgentDispatchRequest, _impl_.dispatch_id_),
  PROTOBUF_FIELD_OFFSET(::livekit::ListAgentDispatchRequest, _impl_.room_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::livekit::ListAgentDispatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::livekit::ListAgentDispatchResponse, _impl_.agent_dispatches_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::livekit::AgentDispatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::livekit::AgentDispatch, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::livekit::AgentDispatch, _impl_.agent_name_),
  PROTOBUF_FIELD_OFFSET(::livekit::AgentDispatch, _impl_.room_),
  PROTOBUF_FIELD_OFFSET(::livekit::AgentDispatch, _impl_.metadata_),
  PROTOBUF_FIELD_OFFSET(::livekit::AgentDispatch, _impl_.state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::livekit::AgentDispatchState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::livekit::AgentDispatchState, _impl_.jobs_),
  PROTOBUF_FIELD_OFFSET(::livekit::AgentDispatchState, _impl_.created_at_),
  PROTOBUF_FIELD_OFFSET(::livekit::AgentDispatchState, _impl_.deleted_at_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::livekit::CreateAgentDispatchRequest)},
  { 9, -1, -1, sizeof(::livekit::RoomAgentDispatch)},
  { 17, -1, -1, sizeof(::livekit::DeleteAgentDispatchRequest)},
  { 25, -1, -1, sizeof(::livekit::ListAgentDispatchRequest)},
  { 33, -1, -1, sizeof(::livekit::ListAgentDispatchResponse)},
  { 40, -1, -1, sizeof(::livekit::AgentDispatch)},
  { 51, -1, -1, sizeof(::livekit::AgentDispatchState)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::livekit::_CreateAgentDispatchRequest_default_instance_._instance,
  &::livekit::_RoomAgentDispatch_default_instance_._instance,
  &::livekit::_DeleteAgentDispatchRequest_default_instance_._instance,
  &::livekit::_ListAgentDispatchRequest_default_instance_._instance,
  &::livekit::_ListAgentDispatchResponse_default_instance_._instance,
  &::livekit::_AgentDispatch_default_instance_._instance,
  &::livekit::_AgentDispatchState_default_instance_._instance,
};

const char descriptor_table_protodef_livekit_5fagent_5fdispatch_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034livekit_agent_dispatch.proto\022\007livekit\032"
  "\023livekit_agent.proto\"P\n\032CreateAgentDispa"
  "tchRequest\022\022\n\nagent_name\030\001 \001(\t\022\014\n\004room\030\002"
  " \001(\t\022\020\n\010metadata\030\003 \001(\t\"9\n\021RoomAgentDispa"
  "tch\022\022\n\nagent_name\030\001 \001(\t\022\020\n\010metadata\030\002 \001("
  "\t\"\?\n\032DeleteAgentDispatchRequest\022\023\n\013dispa"
  "tch_id\030\001 \001(\t\022\014\n\004room\030\002 \001(\t\"=\n\030ListAgentD"
  "ispatchRequest\022\023\n\013dispatch_id\030\001 \001(\t\022\014\n\004r"
  "oom\030\002 \001(\t\"M\n\031ListAgentDispatchResponse\0220"
  "\n\020agent_dispatches\030\001 \003(\0132\026.livekit.Agent"
  "Dispatch\"{\n\rAgentDispatch\022\n\n\002id\030\001 \001(\t\022\022\n"
  "\nagent_name\030\002 \001(\t\022\014\n\004room\030\003 \001(\t\022\020\n\010metad"
  "ata\030\004 \001(\t\022*\n\005state\030\005 \001(\0132\033.livekit.Agent"
  "DispatchState\"X\n\022AgentDispatchState\022\032\n\004j"
  "obs\030\001 \003(\0132\014.livekit.Job\022\022\n\ncreated_at\030\002 "
  "\001(\003\022\022\n\ndeleted_at\030\003 \001(\0032\213\002\n\024AgentDispatc"
  "hService\022M\n\016CreateDispatch\022#.livekit.Cre"
  "ateAgentDispatchRequest\032\026.livekit.AgentD"
  "ispatch\022M\n\016DeleteDispatch\022#.livekit.Dele"
  "teAgentDispatchRequest\032\026.livekit.AgentDi"
  "spatch\022U\n\014ListDispatch\022!.livekit.ListAge"
  "ntDispatchRequest\032\".livekit.ListAgentDis"
  "patchResponseBFZ#github.com/livekit/prot"
  "ocol/livekit\252\002\rLiveKit.Proto\352\002\016LiveKit::"
  "Protob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_livekit_5fagent_5fdispatch_2eproto_deps[1] = {
  &::descriptor_table_livekit_5fagent_2eproto,
};
static ::_pbi::once_flag descriptor_table_livekit_5fagent_5fdispatch_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_livekit_5fagent_5fdispatch_2eproto = {
    false, false, 973, descriptor_table_protodef_livekit_5fagent_5fdispatch_2eproto,
    "livekit_agent_dispatch.proto",
    &descriptor_table_livekit_5fagent_5fdispatch_2eproto_once, descriptor_table_livekit_5fagent_5fdispatch_2eproto_deps, 1, 7,
    schemas, file_default_instances, TableStruct_livekit_5fagent_5fdispatch_2eproto::offsets,
    file_level_metadata_livekit_5fagent_5fdispatch_2eproto, file_level_enum_descriptors_livekit_5fagent_5fdispatch_2eproto,
    file_level_service_descriptors_livekit_5fagent_5fdispatch_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_livekit_5fagent_5fdispatch_2eproto_getter() {
  return &descriptor_table_livekit_5fagent_5fdispatch_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_livekit_5fagent_5fdispatch_2eproto(&descriptor_table_livekit_5fagent_5fdispatch_2eproto);
namespace livekit {

// ===================================================================

class CreateAgentDispatchRequest::_Internal {
 public:
};

CreateAgentDispatchRequest::CreateAgentDispatchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:livekit.CreateAgentDispatchRequest)
}
CreateAgentDispatchRequest::CreateAgentDispatchRequest(const CreateAgentDispatchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateAgentDispatchRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_name_){}
    , decltype(_impl_.room_){}
    , decltype(_impl_.metadata_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.agent_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agent_name().empty()) {
    _this->_impl_.agent_name_.Set(from._internal_agent_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.room_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.room_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_room().empty()) {
    _this->_impl_.room_.Set(from._internal_room(), 
      _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:livekit.CreateAgentDispatchRequest)
}

inline void CreateAgentDispatchRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_name_){}
    , decltype(_impl_.room_){}
    , decltype(_impl_.metadata_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.agent_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.room_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.room_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateAgentDispatchRequest::~CreateAgentDispatchRequest() {
  // @@protoc_insertion_point(destructor:livekit.CreateAgentDispatchRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateAgentDispatchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_name_.Destroy();
  _impl_.room_.Destroy();
  _impl_.metadata_.Destroy();
}

void CreateAgentDispatchRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateAgentDispatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.CreateAgentDispatchRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_name_.ClearToEmpty();
  _impl_.room_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateAgentDispatchRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string agent_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_agent_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.CreateAgentDispatchRequest.agent_name"));
        } else
          goto handle_unusual;
        continue;
      // string room = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_room();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.CreateAgentDispatchRequest.room"));
        } else
          goto handle_unusual;
        continue;
      // string metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.CreateAgentDispatchRequest.metadata"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateAgentDispatchRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:livekit.CreateAgentDispatchRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string agent_name = 1;
  if (!this->_internal_agent_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_name().data(), static_cast<int>(this->_internal_agent_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.CreateAgentDispatchRequest.agent_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_agent_name(), target);
  }

  // string room = 2;
  if (!this->_internal_room().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_room().data(), static_cast<int>(this->_internal_room().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.CreateAgentDispatchRequest.room");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_room(), target);
  }

  // string metadata = 3;
  if (!this->_internal_metadata().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metadata().data(), static_cast<int>(this->_internal_metadata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.CreateAgentDispatchRequest.metadata");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_metadata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.CreateAgentDispatchRequest)
  return target;
}

size_t CreateAgentDispatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:livekit.CreateAgentDispatchRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string agent_name = 1;
  if (!this->_internal_agent_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_name());
  }

  // string room = 2;
  if (!this->_internal_room().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_room());
  }

  // string metadata = 3;
  if (!this->_internal_metadata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metadata());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateAgentDispatchRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateAgentDispatchRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateAgentDispatchRequest::GetClassData() const { return &_class_data_; }


void CreateAgentDispatchRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateAgentDispatchRequest*>(&to_msg);
  auto& from = static_cast<const CreateAgentDispatchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.CreateAgentDispatchRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_agent_name().empty()) {
    _this->_internal_set_agent_name(from._internal_agent_name());
  }
  if (!from._internal_room().empty()) {
    _this->_internal_set_room(from._internal_room());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateAgentDispatchRequest::CopyFrom(const CreateAgentDispatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.CreateAgentDispatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAgentDispatchRequest::IsInitialized() const {
  return true;
}

void CreateAgentDispatchRequest::InternalSwap(CreateAgentDispatchRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agent_name_, lhs_arena,
      &other->_impl_.agent_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.room_, lhs_arena,
      &other->_impl_.room_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.metadata_, lhs_arena,
      &other->_impl_.metadata_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateAgentDispatchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livekit_5fagent_5fdispatch_2eproto_getter, &descriptor_table_livekit_5fagent_5fdispatch_2eproto_once,
      file_level_metadata_livekit_5fagent_5fdispatch_2eproto[0]);
}

// ===================================================================

class RoomAgentDispatch::_Internal {
 public:
};

RoomAgentDispatch::RoomAgentDispatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:livekit.RoomAgentDispatch)
}
RoomAgentDispatch::RoomAgentDispatch(const RoomAgentDispatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomAgentDispatch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_name_){}
    , decltype(_impl_.metadata_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.agent_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agent_name().empty()) {
    _this->_impl_.agent_name_.Set(from._internal_agent_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:livekit.RoomAgentDispatch)
}

inline void RoomAgentDispatch::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_name_){}
    , decltype(_impl_.metadata_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.agent_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RoomAgentDispatch::~RoomAgentDispatch() {
  // @@protoc_insertion_point(destructor:livekit.RoomAgentDispatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomAgentDispatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_name_.Destroy();
  _impl_.metadata_.Destroy();
}

void RoomAgentDispatch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomAgentDispatch::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.RoomAgentDispatch)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_name_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomAgentDispatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string agent_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_agent_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.RoomAgentDispatch.agent_name"));
        } else
          goto handle_unusual;
        continue;
      // string metadata = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.RoomAgentDispatch.metadata"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomAgentDispatch::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:livekit.RoomAgentDispatch)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string agent_name = 1;
  if (!this->_internal_agent_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_name().data(), static_cast<int>(this->_internal_agent_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.RoomAgentDispatch.agent_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_agent_name(), target);
  }

  // string metadata = 2;
  if (!this->_internal_metadata().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metadata().data(), static_cast<int>(this->_internal_metadata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.RoomAgentDispatch.metadata");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_metadata(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.RoomAgentDispatch)
  return target;
}

size_t RoomAgentDispatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:livekit.RoomAgentDispatch)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string agent_name = 1;
  if (!this->_internal_agent_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_name());
  }

  // string metadata = 2;
  if (!this->_internal_metadata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metadata());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomAgentDispatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomAgentDispatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomAgentDispatch::GetClassData() const { return &_class_data_; }


void RoomAgentDispatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomAgentDispatch*>(&to_msg);
  auto& from = static_cast<const RoomAgentDispatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.RoomAgentDispatch)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_agent_name().empty()) {
    _this->_internal_set_agent_name(from._internal_agent_name());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomAgentDispatch::CopyFrom(const RoomAgentDispatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.RoomAgentDispatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomAgentDispatch::IsInitialized() const {
  return true;
}

void RoomAgentDispatch::InternalSwap(RoomAgentDispatch* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agent_name_, lhs_arena,
      &other->_impl_.agent_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.metadata_, lhs_arena,
      &other->_impl_.metadata_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomAgentDispatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livekit_5fagent_5fdispatch_2eproto_getter, &descriptor_table_livekit_5fagent_5fdispatch_2eproto_once,
      file_level_metadata_livekit_5fagent_5fdispatch_2eproto[1]);
}

// ===================================================================

class DeleteAgentDispatchRequest::_Internal {
 public:
};

DeleteAgentDispatchRequest::DeleteAgentDispatchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:livekit.DeleteAgentDispatchRequest)
}
DeleteAgentDispatchRequest::DeleteAgentDispatchRequest(const DeleteAgentDispatchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteAgentDispatchRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dispatch_id_){}
    , decltype(_impl_.room_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.dispatch_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dispatch_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dispatch_id().empty()) {
    _this->_impl_.dispatch_id_.Set(from._internal_dispatch_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.room_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.room_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_room().empty()) {
    _this->_impl_.room_.Set(from._internal_room(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:livekit.DeleteAgentDispatchRequest)
}

inline void DeleteAgentDispatchRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dispatch_id_){}
    , decltype(_impl_.room_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.dispatch_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dispatch_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.room_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.room_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteAgentDispatchRequest::~DeleteAgentDispatchRequest() {
  // @@protoc_insertion_point(destructor:livekit.DeleteAgentDispatchRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteAgentDispatchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dispatch_id_.Destroy();
  _impl_.room_.Destroy();
}

void DeleteAgentDispatchRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteAgentDispatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.DeleteAgentDispatchRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dispatch_id_.ClearToEmpty();
  _impl_.room_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteAgentDispatchRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string dispatch_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_dispatch_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.DeleteAgentDispatchRequest.dispatch_id"));
        } else
          goto handle_unusual;
        continue;
      // string room = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_room();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.DeleteAgentDispatchRequest.room"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteAgentDispatchRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:livekit.DeleteAgentDispatchRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string dispatch_id = 1;
  if (!this->_internal_dispatch_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dispatch_id().data(), static_cast<int>(this->_internal_dispatch_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.DeleteAgentDispatchRequest.dispatch_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_dispatch_id(), target);
  }

  // string room = 2;
  if (!this->_internal_room().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_room().data(), static_cast<int>(this->_internal_room().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.DeleteAgentDispatchRequest.room");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_room(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.DeleteAgentDispatchRequest)
  return target;
}

size_t DeleteAgentDispatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:livekit.DeleteAgentDispatchRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dispatch_id = 1;
  if (!this->_internal_dispatch_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dispatch_id());
  }

  // string room = 2;
  if (!this->_internal_room().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_room());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteAgentDispatchRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteAgentDispatchRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteAgentDispatchRequest::GetClassData() const { return &_class_data_; }


void DeleteAgentDispatchRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteAgentDispatchRequest*>(&to_msg);
  auto& from = static_cast<const DeleteAgentDispatchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.DeleteAgentDispatchRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dispatch_id().empty()) {
    _this->_internal_set_dispatch_id(from._internal_dispatch_id());
  }
  if (!from._internal_room().empty()) {
    _this->_internal_set_room(from._internal_room());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteAgentDispatchRequest::CopyFrom(const DeleteAgentDispatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.DeleteAgentDispatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteAgentDispatchRequest::IsInitialized() const {
  return true;
}

void DeleteAgentDispatchRequest::InternalSwap(DeleteAgentDispatchRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dispatch_id_, lhs_arena,
      &other->_impl_.dispatch_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.room_, lhs_arena,
      &other->_impl_.room_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteAgentDispatchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livekit_5fagent_5fdispatch_2eproto_getter, &descriptor_table_livekit_5fagent_5fdispatch_2eproto_once,
      file_level_metadata_livekit_5fagent_5fdispatch_2eproto[2]);
}

// ===================================================================

class ListAgentDispatchRequest::_Internal {
 public:
};

ListAgentDispatchRequest::ListAgentDispatchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:livekit.ListAgentDispatchRequest)
}
ListAgentDispatchRequest::ListAgentDispatchRequest(const ListAgentDispatchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListAgentDispatchRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dispatch_id_){}
    , decltype(_impl_.room_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.dispatch_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dispatch_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dispatch_id().empty()) {
    _this->_impl_.dispatch_id_.Set(from._internal_dispatch_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.room_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.room_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_room().empty()) {
    _this->_impl_.room_.Set(from._internal_room(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:livekit.ListAgentDispatchRequest)
}

inline void ListAgentDispatchRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dispatch_id_){}
    , decltype(_impl_.room_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.dispatch_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dispatch_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.room_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.room_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListAgentDispatchRequest::~ListAgentDispatchRequest() {
  // @@protoc_insertion_point(destructor:livekit.ListAgentDispatchRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListAgentDispatchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dispatch_id_.Destroy();
  _impl_.room_.Destroy();
}

void ListAgentDispatchRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListAgentDispatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.ListAgentDispatchRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dispatch_id_.ClearToEmpty();
  _impl_.room_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListAgentDispatchRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string dispatch_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_dispatch_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.ListAgentDispatchRequest.dispatch_id"));
        } else
          goto handle_unusual;
        continue;
      // string room = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_room();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.ListAgentDispatchRequest.room"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListAgentDispatchRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:livekit.ListAgentDispatchRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string dispatch_id = 1;
  if (!this->_internal_dispatch_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dispatch_id().data(), static_cast<int>(this->_internal_dispatch_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.ListAgentDispatchRequest.dispatch_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_dispatch_id(), target);
  }

  // string room = 2;
  if (!this->_internal_room().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_room().data(), static_cast<int>(this->_internal_room().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.ListAgentDispatchRequest.room");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_room(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.ListAgentDispatchRequest)
  return target;
}

size_t ListAgentDispatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:livekit.ListAgentDispatchRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dispatch_id = 1;
  if (!this->_internal_dispatch_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dispatch_id());
  }

  // string room = 2;
  if (!this->_internal_room().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_room());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListAgentDispatchRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListAgentDispatchRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListAgentDispatchRequest::GetClassData() const { return &_class_data_; }


void ListAgentDispatchRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListAgentDispatchRequest*>(&to_msg);
  auto& from = static_cast<const ListAgentDispatchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.ListAgentDispatchRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dispatch_id().empty()) {
    _this->_internal_set_dispatch_id(from._internal_dispatch_id());
  }
  if (!from._internal_room().empty()) {
    _this->_internal_set_room(from._internal_room());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListAgentDispatchRequest::CopyFrom(const ListAgentDispatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.ListAgentDispatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAgentDispatchRequest::IsInitialized() const {
  return true;
}

void ListAgentDispatchRequest::InternalSwap(ListAgentDispatchRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dispatch_id_, lhs_arena,
      &other->_impl_.dispatch_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.room_, lhs_arena,
      &other->_impl_.room_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListAgentDispatchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livekit_5fagent_5fdispatch_2eproto_getter, &descriptor_table_livekit_5fagent_5fdispatch_2eproto_once,
      file_level_metadata_livekit_5fagent_5fdispatch_2eproto[3]);
}

// ===================================================================

class ListAgentDispatchResponse::_Internal {
 public:
};

ListAgentDispatchResponse::ListAgentDispatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:livekit.ListAgentDispatchResponse)
}
ListAgentDispatchResponse::ListAgentDispatchResponse(const ListAgentDispatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListAgentDispatchResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_dispatches_){from._impl_.agent_dispatches_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:livekit.ListAgentDispatchResponse)
}

inline void ListAgentDispatchResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_dispatches_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListAgentDispatchResponse::~ListAgentDispatchResponse() {
  // @@protoc_insertion_point(destructor:livekit.ListAgentDispatchResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListAgentDispatchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_dispatches_.~RepeatedPtrField();
}

void ListAgentDispatchResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListAgentDispatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.ListAgentDispatchResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_dispatches_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListAgentDispatchResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .livekit.AgentDispatch agent_dispatches = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agent_dispatches(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListAgentDispatchResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:livekit.ListAgentDispatchResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .livekit.AgentDispatch agent_dispatches = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_agent_dispatches_size()); i < n; i++) {
    const auto& repfield = this->_internal_agent_dispatches(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.ListAgentDispatchResponse)
  return target;
}

size_t ListAgentDispatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:livekit.ListAgentDispatchResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .livekit.AgentDispatch agent_dispatches = 1;
  total_size += 1UL * this->_internal_agent_dispatches_size();
  for (const auto& msg : this->_impl_.agent_dispatches_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListAgentDispatchResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListAgentDispatchResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListAgentDispatchResponse::GetClassData() const { return &_class_data_; }


void ListAgentDispatchResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListAgentDispatchResponse*>(&to_msg);
  auto& from = static_cast<const ListAgentDispatchResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.ListAgentDispatchResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agent_dispatches_.MergeFrom(from._impl_.agent_dispatches_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListAgentDispatchResponse::CopyFrom(const ListAgentDispatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.ListAgentDispatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAgentDispatchResponse::IsInitialized() const {
  return true;
}

void ListAgentDispatchResponse::InternalSwap(ListAgentDispatchResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agent_dispatches_.InternalSwap(&other->_impl_.agent_dispatches_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListAgentDispatchResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livekit_5fagent_5fdispatch_2eproto_getter, &descriptor_table_livekit_5fagent_5fdispatch_2eproto_once,
      file_level_metadata_livekit_5fagent_5fdispatch_2eproto[4]);
}

// ===================================================================

class AgentDispatch::_Internal {
 public:
  static const ::livekit::AgentDispatchState& state(const AgentDispatch* msg);
};

const ::livekit::AgentDispatchState&
AgentDispatch::_Internal::state(const AgentDispatch* msg) {
  return *msg->_impl_.state_;
}
AgentDispatch::AgentDispatch(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:livekit.AgentDispatch)
}
AgentDispatch::AgentDispatch(const AgentDispatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AgentDispatch* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.agent_name_){}
    , decltype(_impl_.room_){}
    , decltype(_impl_.metadata_){}
    , decltype(_impl_.state_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.agent_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agent_name().empty()) {
    _this->_impl_.agent_name_.Set(from._internal_agent_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.room_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.room_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_room().empty()) {
    _this->_impl_.room_.Set(from._internal_room(), 
      _this->GetArenaForAllocation());
  }
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_metadata().empty()) {
    _this->_impl_.metadata_.Set(from._internal_metadata(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_state()) {
    _this->_impl_.state_ = new ::livekit::AgentDispatchState(*from._impl_.state_);
  }
  // @@protoc_insertion_point(copy_constructor:livekit.AgentDispatch)
}

inline void AgentDispatch::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.agent_name_){}
    , decltype(_impl_.room_){}
    , decltype(_impl_.metadata_){}
    , decltype(_impl_.state_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.agent_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.room_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.room_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.metadata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.metadata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AgentDispatch::~AgentDispatch() {
  // @@protoc_insertion_point(destructor:livekit.AgentDispatch)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgentDispatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.agent_name_.Destroy();
  _impl_.room_.Destroy();
  _impl_.metadata_.Destroy();
  if (this != internal_default_instance()) delete _impl_.state_;
}

void AgentDispatch::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AgentDispatch::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.AgentDispatch)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.agent_name_.ClearToEmpty();
  _impl_.room_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.state_ != nullptr) {
    delete _impl_.state_;
  }
  _impl_.state_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentDispatch::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.AgentDispatch.id"));
        } else
          goto handle_unusual;
        continue;
      // string agent_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_agent_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.AgentDispatch.agent_name"));
        } else
          goto handle_unusual;
        continue;
      // string room = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_room();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.AgentDispatch.room"));
        } else
          goto handle_unusual;
        continue;
      // string metadata = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_metadata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "livekit.AgentDispatch.metadata"));
        } else
          goto handle_unusual;
        continue;
      // .livekit.AgentDispatchState state = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentDispatch::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:livekit.AgentDispatch)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.AgentDispatch.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string agent_name = 2;
  if (!this->_internal_agent_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_name().data(), static_cast<int>(this->_internal_agent_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.AgentDispatch.agent_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_agent_name(), target);
  }

  // string room = 3;
  if (!this->_internal_room().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_room().data(), static_cast<int>(this->_internal_room().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.AgentDispatch.room");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_room(), target);
  }

  // string metadata = 4;
  if (!this->_internal_metadata().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metadata().data(), static_cast<int>(this->_internal_metadata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "livekit.AgentDispatch.metadata");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_metadata(), target);
  }

  // .livekit.AgentDispatchState state = 5;
  if (this->_internal_has_state()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.AgentDispatch)
  return target;
}

size_t AgentDispatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:livekit.AgentDispatch)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string agent_name = 2;
  if (!this->_internal_agent_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_name());
  }

  // string room = 3;
  if (!this->_internal_room().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_room());
  }

  // string metadata = 4;
  if (!this->_internal_metadata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metadata());
  }

  // .livekit.AgentDispatchState state = 5;
  if (this->_internal_has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentDispatch::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AgentDispatch::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentDispatch::GetClassData() const { return &_class_data_; }


void AgentDispatch::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AgentDispatch*>(&to_msg);
  auto& from = static_cast<const AgentDispatch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.AgentDispatch)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_agent_name().empty()) {
    _this->_internal_set_agent_name(from._internal_agent_name());
  }
  if (!from._internal_room().empty()) {
    _this->_internal_set_room(from._internal_room());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (from._internal_has_state()) {
    _this->_internal_mutable_state()->::livekit::AgentDispatchState::MergeFrom(
        from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentDispatch::CopyFrom(const AgentDispatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.AgentDispatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentDispatch::IsInitialized() const {
  return true;
}

void AgentDispatch::InternalSwap(AgentDispatch* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agent_name_, lhs_arena,
      &other->_impl_.agent_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.room_, lhs_arena,
      &other->_impl_.room_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.metadata_, lhs_arena,
      &other->_impl_.metadata_, rhs_arena
  );
  swap(_impl_.state_, other->_impl_.state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentDispatch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livekit_5fagent_5fdispatch_2eproto_getter, &descriptor_table_livekit_5fagent_5fdispatch_2eproto_once,
      file_level_metadata_livekit_5fagent_5fdispatch_2eproto[5]);
}

// ===================================================================

class AgentDispatchState::_Internal {
 public:
};

void AgentDispatchState::clear_jobs() {
  _impl_.jobs_.Clear();
}
AgentDispatchState::AgentDispatchState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:livekit.AgentDispatchState)
}
AgentDispatchState::AgentDispatchState(const AgentDispatchState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AgentDispatchState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.jobs_){from._impl_.jobs_}
    , decltype(_impl_.created_at_){}
    , decltype(_impl_.deleted_at_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.created_at_, &from._impl_.created_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.deleted_at_) -
    reinterpret_cast<char*>(&_impl_.created_at_)) + sizeof(_impl_.deleted_at_));
  // @@protoc_insertion_point(copy_constructor:livekit.AgentDispatchState)
}

inline void AgentDispatchState::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.jobs_){arena}
    , decltype(_impl_.created_at_){int64_t{0}}
    , decltype(_impl_.deleted_at_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AgentDispatchState::~AgentDispatchState() {
  // @@protoc_insertion_point(destructor:livekit.AgentDispatchState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AgentDispatchState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.jobs_.~RepeatedPtrField();
}

void AgentDispatchState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AgentDispatchState::Clear() {
// @@protoc_insertion_point(message_clear_start:livekit.AgentDispatchState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.jobs_.Clear();
  ::memset(&_impl_.created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.deleted_at_) -
      reinterpret_cast<char*>(&_impl_.created_at_)) + sizeof(_impl_.deleted_at_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentDispatchState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .livekit.Job jobs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_jobs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 created_at = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.created_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 deleted_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.deleted_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentDispatchState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:livekit.AgentDispatchState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .livekit.Job jobs = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_jobs_size()); i < n; i++) {
    const auto& repfield = this->_internal_jobs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int64 created_at = 2;
  if (this->_internal_created_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_created_at(), target);
  }

  // int64 deleted_at = 3;
  if (this->_internal_deleted_at() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_deleted_at(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:livekit.AgentDispatchState)
  return target;
}

size_t AgentDispatchState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:livekit.AgentDispatchState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .livekit.Job jobs = 1;
  total_size += 1UL * this->_internal_jobs_size();
  for (const auto& msg : this->_impl_.jobs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 created_at = 2;
  if (this->_internal_created_at() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_created_at());
  }

  // int64 deleted_at = 3;
  if (this->_internal_deleted_at() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_deleted_at());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentDispatchState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AgentDispatchState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentDispatchState::GetClassData() const { return &_class_data_; }


void AgentDispatchState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AgentDispatchState*>(&to_msg);
  auto& from = static_cast<const AgentDispatchState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:livekit.AgentDispatchState)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.jobs_.MergeFrom(from._impl_.jobs_);
  if (from._internal_created_at() != 0) {
    _this->_internal_set_created_at(from._internal_created_at());
  }
  if (from._internal_deleted_at() != 0) {
    _this->_internal_set_deleted_at(from._internal_deleted_at());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentDispatchState::CopyFrom(const AgentDispatchState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:livekit.AgentDispatchState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentDispatchState::IsInitialized() const {
  return true;
}

void AgentDispatchState::InternalSwap(AgentDispatchState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.jobs_.InternalSwap(&other->_impl_.jobs_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgentDispatchState, _impl_.deleted_at_)
      + sizeof(AgentDispatchState::_impl_.deleted_at_)
      - PROTOBUF_FIELD_OFFSET(AgentDispatchState, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentDispatchState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_livekit_5fagent_5fdispatch_2eproto_getter, &descriptor_table_livekit_5fagent_5fdispatch_2eproto_once,
      file_level_metadata_livekit_5fagent_5fdispatch_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace livekit
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::livekit::CreateAgentDispatchRequest*
Arena::CreateMaybeMessage< ::livekit::CreateAgentDispatchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::livekit::CreateAgentDispatchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::livekit::RoomAgentDispatch*
Arena::CreateMaybeMessage< ::livekit::RoomAgentDispatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::livekit::RoomAgentDispatch >(arena);
}
template<> PROTOBUF_NOINLINE ::livekit::DeleteAgentDispatchRequest*
Arena::CreateMaybeMessage< ::livekit::DeleteAgentDispatchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::livekit::DeleteAgentDispatchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::livekit::ListAgentDispatchRequest*
Arena::CreateMaybeMessage< ::livekit::ListAgentDispatchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::livekit::ListAgentDispatchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::livekit::ListAgentDispatchResponse*
Arena::CreateMaybeMessage< ::livekit::ListAgentDispatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::livekit::ListAgentDispatchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::livekit::AgentDispatch*
Arena::CreateMaybeMessage< ::livekit::AgentDispatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::livekit::AgentDispatch >(arena);
}
template<> PROTOBUF_NOINLINE ::livekit::AgentDispatchState*
Arena::CreateMaybeMessage< ::livekit::AgentDispatchState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::livekit::AgentDispatchState >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
