// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: track_publication.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_track_5fpublication_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_track_5fpublication_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_track_5fpublication_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_track_5fpublication_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_track_5fpublication_2eproto;
namespace livekit {
namespace proto {
class EnableRemoteTrackPublicationRequest;
struct EnableRemoteTrackPublicationRequestDefaultTypeInternal;
extern EnableRemoteTrackPublicationRequestDefaultTypeInternal _EnableRemoteTrackPublicationRequest_default_instance_;
class EnableRemoteTrackPublicationResponse;
struct EnableRemoteTrackPublicationResponseDefaultTypeInternal;
extern EnableRemoteTrackPublicationResponseDefaultTypeInternal _EnableRemoteTrackPublicationResponse_default_instance_;
class UpdateRemoteTrackPublicationDimensionRequest;
struct UpdateRemoteTrackPublicationDimensionRequestDefaultTypeInternal;
extern UpdateRemoteTrackPublicationDimensionRequestDefaultTypeInternal _UpdateRemoteTrackPublicationDimensionRequest_default_instance_;
class UpdateRemoteTrackPublicationDimensionResponse;
struct UpdateRemoteTrackPublicationDimensionResponseDefaultTypeInternal;
extern UpdateRemoteTrackPublicationDimensionResponseDefaultTypeInternal _UpdateRemoteTrackPublicationDimensionResponse_default_instance_;
}  // namespace proto
}  // namespace livekit
PROTOBUF_NAMESPACE_OPEN
template<> ::livekit::proto::EnableRemoteTrackPublicationRequest* Arena::CreateMaybeMessage<::livekit::proto::EnableRemoteTrackPublicationRequest>(Arena*);
template<> ::livekit::proto::EnableRemoteTrackPublicationResponse* Arena::CreateMaybeMessage<::livekit::proto::EnableRemoteTrackPublicationResponse>(Arena*);
template<> ::livekit::proto::UpdateRemoteTrackPublicationDimensionRequest* Arena::CreateMaybeMessage<::livekit::proto::UpdateRemoteTrackPublicationDimensionRequest>(Arena*);
template<> ::livekit::proto::UpdateRemoteTrackPublicationDimensionResponse* Arena::CreateMaybeMessage<::livekit::proto::UpdateRemoteTrackPublicationDimensionResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace livekit {
namespace proto {

// ===================================================================

class EnableRemoteTrackPublicationRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:livekit.proto.EnableRemoteTrackPublicationRequest) */ {
 public:
  inline EnableRemoteTrackPublicationRequest() : EnableRemoteTrackPublicationRequest(nullptr) {}
  ~EnableRemoteTrackPublicationRequest() override;
  explicit PROTOBUF_CONSTEXPR EnableRemoteTrackPublicationRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EnableRemoteTrackPublicationRequest(const EnableRemoteTrackPublicationRequest& from);
  EnableRemoteTrackPublicationRequest(EnableRemoteTrackPublicationRequest&& from) noexcept
    : EnableRemoteTrackPublicationRequest() {
    *this = ::std::move(from);
  }

  inline EnableRemoteTrackPublicationRequest& operator=(const EnableRemoteTrackPublicationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnableRemoteTrackPublicationRequest& operator=(EnableRemoteTrackPublicationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnableRemoteTrackPublicationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnableRemoteTrackPublicationRequest* internal_default_instance() {
    return reinterpret_cast<const EnableRemoteTrackPublicationRequest*>(
               &_EnableRemoteTrackPublicationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EnableRemoteTrackPublicationRequest& a, EnableRemoteTrackPublicationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(EnableRemoteTrackPublicationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnableRemoteTrackPublicationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnableRemoteTrackPublicationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EnableRemoteTrackPublicationRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EnableRemoteTrackPublicationRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EnableRemoteTrackPublicationRequest& from) {
    EnableRemoteTrackPublicationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnableRemoteTrackPublicationRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "livekit.proto.EnableRemoteTrackPublicationRequest";
  }
  protected:
  explicit EnableRemoteTrackPublicationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrackPublicationHandleFieldNumber = 1,
    kEnabledFieldNumber = 2,
  };
  // required uint64 track_publication_handle = 1;
  bool has_track_publication_handle() const;
  private:
  bool _internal_has_track_publication_handle() const;
  public:
  void clear_track_publication_handle();
  uint64_t track_publication_handle() const;
  void set_track_publication_handle(uint64_t value);
  private:
  uint64_t _internal_track_publication_handle() const;
  void _internal_set_track_publication_handle(uint64_t value);
  public:

  // required bool enabled = 2;
  bool has_enabled() const;
  private:
  bool _internal_has_enabled() const;
  public:
  void clear_enabled();
  bool enabled() const;
  void set_enabled(bool value);
  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);
  public:

  // @@protoc_insertion_point(class_scope:livekit.proto.EnableRemoteTrackPublicationRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t track_publication_handle_;
    bool enabled_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_track_5fpublication_2eproto;
};
// -------------------------------------------------------------------

class EnableRemoteTrackPublicationResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:livekit.proto.EnableRemoteTrackPublicationResponse) */ {
 public:
  inline EnableRemoteTrackPublicationResponse() : EnableRemoteTrackPublicationResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR EnableRemoteTrackPublicationResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EnableRemoteTrackPublicationResponse(const EnableRemoteTrackPublicationResponse& from);
  EnableRemoteTrackPublicationResponse(EnableRemoteTrackPublicationResponse&& from) noexcept
    : EnableRemoteTrackPublicationResponse() {
    *this = ::std::move(from);
  }

  inline EnableRemoteTrackPublicationResponse& operator=(const EnableRemoteTrackPublicationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EnableRemoteTrackPublicationResponse& operator=(EnableRemoteTrackPublicationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EnableRemoteTrackPublicationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EnableRemoteTrackPublicationResponse* internal_default_instance() {
    return reinterpret_cast<const EnableRemoteTrackPublicationResponse*>(
               &_EnableRemoteTrackPublicationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EnableRemoteTrackPublicationResponse& a, EnableRemoteTrackPublicationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(EnableRemoteTrackPublicationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EnableRemoteTrackPublicationResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EnableRemoteTrackPublicationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EnableRemoteTrackPublicationResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const EnableRemoteTrackPublicationResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const EnableRemoteTrackPublicationResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "livekit.proto.EnableRemoteTrackPublicationResponse";
  }
  protected:
  explicit EnableRemoteTrackPublicationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:livekit.proto.EnableRemoteTrackPublicationResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_track_5fpublication_2eproto;
};
// -------------------------------------------------------------------

class UpdateRemoteTrackPublicationDimensionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:livekit.proto.UpdateRemoteTrackPublicationDimensionRequest) */ {
 public:
  inline UpdateRemoteTrackPublicationDimensionRequest() : UpdateRemoteTrackPublicationDimensionRequest(nullptr) {}
  ~UpdateRemoteTrackPublicationDimensionRequest() override;
  explicit PROTOBUF_CONSTEXPR UpdateRemoteTrackPublicationDimensionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpdateRemoteTrackPublicationDimensionRequest(const UpdateRemoteTrackPublicationDimensionRequest& from);
  UpdateRemoteTrackPublicationDimensionRequest(UpdateRemoteTrackPublicationDimensionRequest&& from) noexcept
    : UpdateRemoteTrackPublicationDimensionRequest() {
    *this = ::std::move(from);
  }

  inline UpdateRemoteTrackPublicationDimensionRequest& operator=(const UpdateRemoteTrackPublicationDimensionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRemoteTrackPublicationDimensionRequest& operator=(UpdateRemoteTrackPublicationDimensionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateRemoteTrackPublicationDimensionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateRemoteTrackPublicationDimensionRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateRemoteTrackPublicationDimensionRequest*>(
               &_UpdateRemoteTrackPublicationDimensionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(UpdateRemoteTrackPublicationDimensionRequest& a, UpdateRemoteTrackPublicationDimensionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateRemoteTrackPublicationDimensionRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRemoteTrackPublicationDimensionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateRemoteTrackPublicationDimensionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateRemoteTrackPublicationDimensionRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UpdateRemoteTrackPublicationDimensionRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const UpdateRemoteTrackPublicationDimensionRequest& from) {
    UpdateRemoteTrackPublicationDimensionRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateRemoteTrackPublicationDimensionRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "livekit.proto.UpdateRemoteTrackPublicationDimensionRequest";
  }
  protected:
  explicit UpdateRemoteTrackPublicationDimensionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrackPublicationHandleFieldNumber = 1,
    kWidthFieldNumber = 2,
    kHeightFieldNumber = 3,
  };
  // required uint64 track_publication_handle = 1;
  bool has_track_publication_handle() const;
  private:
  bool _internal_has_track_publication_handle() const;
  public:
  void clear_track_publication_handle();
  uint64_t track_publication_handle() const;
  void set_track_publication_handle(uint64_t value);
  private:
  uint64_t _internal_track_publication_handle() const;
  void _internal_set_track_publication_handle(uint64_t value);
  public:

  // required uint32 width = 2;
  bool has_width() const;
  private:
  bool _internal_has_width() const;
  public:
  void clear_width();
  uint32_t width() const;
  void set_width(uint32_t value);
  private:
  uint32_t _internal_width() const;
  void _internal_set_width(uint32_t value);
  public:

  // required uint32 height = 3;
  bool has_height() const;
  private:
  bool _internal_has_height() const;
  public:
  void clear_height();
  uint32_t height() const;
  void set_height(uint32_t value);
  private:
  uint32_t _internal_height() const;
  void _internal_set_height(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:livekit.proto.UpdateRemoteTrackPublicationDimensionRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint64_t track_publication_handle_;
    uint32_t width_;
    uint32_t height_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_track_5fpublication_2eproto;
};
// -------------------------------------------------------------------

class UpdateRemoteTrackPublicationDimensionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:livekit.proto.UpdateRemoteTrackPublicationDimensionResponse) */ {
 public:
  inline UpdateRemoteTrackPublicationDimensionResponse() : UpdateRemoteTrackPublicationDimensionResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR UpdateRemoteTrackPublicationDimensionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UpdateRemoteTrackPublicationDimensionResponse(const UpdateRemoteTrackPublicationDimensionResponse& from);
  UpdateRemoteTrackPublicationDimensionResponse(UpdateRemoteTrackPublicationDimensionResponse&& from) noexcept
    : UpdateRemoteTrackPublicationDimensionResponse() {
    *this = ::std::move(from);
  }

  inline UpdateRemoteTrackPublicationDimensionResponse& operator=(const UpdateRemoteTrackPublicationDimensionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateRemoteTrackPublicationDimensionResponse& operator=(UpdateRemoteTrackPublicationDimensionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateRemoteTrackPublicationDimensionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateRemoteTrackPublicationDimensionResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateRemoteTrackPublicationDimensionResponse*>(
               &_UpdateRemoteTrackPublicationDimensionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(UpdateRemoteTrackPublicationDimensionResponse& a, UpdateRemoteTrackPublicationDimensionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateRemoteTrackPublicationDimensionResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateRemoteTrackPublicationDimensionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateRemoteTrackPublicationDimensionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpdateRemoteTrackPublicationDimensionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UpdateRemoteTrackPublicationDimensionResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UpdateRemoteTrackPublicationDimensionResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "livekit.proto.UpdateRemoteTrackPublicationDimensionResponse";
  }
  protected:
  explicit UpdateRemoteTrackPublicationDimensionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:livekit.proto.UpdateRemoteTrackPublicationDimensionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_track_5fpublication_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EnableRemoteTrackPublicationRequest

// required uint64 track_publication_handle = 1;
inline bool EnableRemoteTrackPublicationRequest::_internal_has_track_publication_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool EnableRemoteTrackPublicationRequest::has_track_publication_handle() const {
  return _internal_has_track_publication_handle();
}
inline void EnableRemoteTrackPublicationRequest::clear_track_publication_handle() {
  _impl_.track_publication_handle_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t EnableRemoteTrackPublicationRequest::_internal_track_publication_handle() const {
  return _impl_.track_publication_handle_;
}
inline uint64_t EnableRemoteTrackPublicationRequest::track_publication_handle() const {
  // @@protoc_insertion_point(field_get:livekit.proto.EnableRemoteTrackPublicationRequest.track_publication_handle)
  return _internal_track_publication_handle();
}
inline void EnableRemoteTrackPublicationRequest::_internal_set_track_publication_handle(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.track_publication_handle_ = value;
}
inline void EnableRemoteTrackPublicationRequest::set_track_publication_handle(uint64_t value) {
  _internal_set_track_publication_handle(value);
  // @@protoc_insertion_point(field_set:livekit.proto.EnableRemoteTrackPublicationRequest.track_publication_handle)
}

// required bool enabled = 2;
inline bool EnableRemoteTrackPublicationRequest::_internal_has_enabled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool EnableRemoteTrackPublicationRequest::has_enabled() const {
  return _internal_has_enabled();
}
inline void EnableRemoteTrackPublicationRequest::clear_enabled() {
  _impl_.enabled_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool EnableRemoteTrackPublicationRequest::_internal_enabled() const {
  return _impl_.enabled_;
}
inline bool EnableRemoteTrackPublicationRequest::enabled() const {
  // @@protoc_insertion_point(field_get:livekit.proto.EnableRemoteTrackPublicationRequest.enabled)
  return _internal_enabled();
}
inline void EnableRemoteTrackPublicationRequest::_internal_set_enabled(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.enabled_ = value;
}
inline void EnableRemoteTrackPublicationRequest::set_enabled(bool value) {
  _internal_set_enabled(value);
  // @@protoc_insertion_point(field_set:livekit.proto.EnableRemoteTrackPublicationRequest.enabled)
}

// -------------------------------------------------------------------

// EnableRemoteTrackPublicationResponse

// -------------------------------------------------------------------

// UpdateRemoteTrackPublicationDimensionRequest

// required uint64 track_publication_handle = 1;
inline bool UpdateRemoteTrackPublicationDimensionRequest::_internal_has_track_publication_handle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UpdateRemoteTrackPublicationDimensionRequest::has_track_publication_handle() const {
  return _internal_has_track_publication_handle();
}
inline void UpdateRemoteTrackPublicationDimensionRequest::clear_track_publication_handle() {
  _impl_.track_publication_handle_ = uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint64_t UpdateRemoteTrackPublicationDimensionRequest::_internal_track_publication_handle() const {
  return _impl_.track_publication_handle_;
}
inline uint64_t UpdateRemoteTrackPublicationDimensionRequest::track_publication_handle() const {
  // @@protoc_insertion_point(field_get:livekit.proto.UpdateRemoteTrackPublicationDimensionRequest.track_publication_handle)
  return _internal_track_publication_handle();
}
inline void UpdateRemoteTrackPublicationDimensionRequest::_internal_set_track_publication_handle(uint64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.track_publication_handle_ = value;
}
inline void UpdateRemoteTrackPublicationDimensionRequest::set_track_publication_handle(uint64_t value) {
  _internal_set_track_publication_handle(value);
  // @@protoc_insertion_point(field_set:livekit.proto.UpdateRemoteTrackPublicationDimensionRequest.track_publication_handle)
}

// required uint32 width = 2;
inline bool UpdateRemoteTrackPublicationDimensionRequest::_internal_has_width() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UpdateRemoteTrackPublicationDimensionRequest::has_width() const {
  return _internal_has_width();
}
inline void UpdateRemoteTrackPublicationDimensionRequest::clear_width() {
  _impl_.width_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline uint32_t UpdateRemoteTrackPublicationDimensionRequest::_internal_width() const {
  return _impl_.width_;
}
inline uint32_t UpdateRemoteTrackPublicationDimensionRequest::width() const {
  // @@protoc_insertion_point(field_get:livekit.proto.UpdateRemoteTrackPublicationDimensionRequest.width)
  return _internal_width();
}
inline void UpdateRemoteTrackPublicationDimensionRequest::_internal_set_width(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.width_ = value;
}
inline void UpdateRemoteTrackPublicationDimensionRequest::set_width(uint32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:livekit.proto.UpdateRemoteTrackPublicationDimensionRequest.width)
}

// required uint32 height = 3;
inline bool UpdateRemoteTrackPublicationDimensionRequest::_internal_has_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UpdateRemoteTrackPublicationDimensionRequest::has_height() const {
  return _internal_has_height();
}
inline void UpdateRemoteTrackPublicationDimensionRequest::clear_height() {
  _impl_.height_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline uint32_t UpdateRemoteTrackPublicationDimensionRequest::_internal_height() const {
  return _impl_.height_;
}
inline uint32_t UpdateRemoteTrackPublicationDimensionRequest::height() const {
  // @@protoc_insertion_point(field_get:livekit.proto.UpdateRemoteTrackPublicationDimensionRequest.height)
  return _internal_height();
}
inline void UpdateRemoteTrackPublicationDimensionRequest::_internal_set_height(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.height_ = value;
}
inline void UpdateRemoteTrackPublicationDimensionRequest::set_height(uint32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:livekit.proto.UpdateRemoteTrackPublicationDimensionRequest.height)
}

// -------------------------------------------------------------------

// UpdateRemoteTrackPublicationDimensionResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace livekit

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_track_5fpublication_2eproto
